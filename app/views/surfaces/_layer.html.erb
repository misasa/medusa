<table class="table table-condensed table-striped">
  <thead>
    <tr>
      <th></th>
      <th>layer name</th>
      <th>opacity</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td></td>
      <td>top</td>
      <td>100</td>
      <td>
      <%= content_tag :ul, class: "surface-layer", style: "min-height: 20px;" do %>
	<% @surface.surface_images.not_belongs_to_layer.reorder("position DESC").each do |surface_image| %>
          <% next unless surface_image.image %>
	  <%= content_tag :span, class: "surface-image", data: { image_id: surface_image.image.id, surface_id: @surface.id, surface_image_id: surface_image.id } do %> 
	    <%= surface_image.image.decorate.picture(width: 70, height: 70, type: :thumb) %>
	  <% end %>
	<% end %>
      <% end %>
      </td>
      <td></td>
    </tr>
    <tr>
      <%= form_for SurfaceLayer.new, url: surface_layers_path(@surface) do |f|%>
        <%= hidden_tabname_tag(__FILE__) %>
        <td></td>
        <td>
	  <%= f.text_field :name %>
	  <%= f.hidden_field :priority, value: @surface.surface_layers.max_priority + 1 %>
	</td>
        <td colspan>
	  <%= f.text_field :opacity %>
	</td>
        <td>
        </td>
        <td>
          <%= f.button title:"add layer", class: "btn btn-default" do %>
            <span class="glyphicon glyphicon-plus"></span>
          <% end %>
        </td>
      <% end %>
    </tr>


    <% @surface.surface_layers.reorder("priority DESC").each do |surface_layer| %>
      <tr>
        <td></td>
        <td><%= link_to_if can?(:read, surface_layer), list_title(surface_layer), surface_layer_path(@surface, surface_layer) %></td>
	<td><%= surface_layer.opacity %></td>
        <td>
	<%= content_tag :ul, class: "surface-layer", data: { id: surface_layer.id }, style: "min-height: 20px;" do %>
	  <% surface_layer.surface_images.reorder("position DESC").each do |surface_image| %>
            <% next unless surface_image.image %>
	    <%= content_tag :span, class: "surface-image", data: { image_id: surface_image.image.id, surface_id: @surface.id, surface_image_id: surface_image.id } do %> 
	      <%= surface_image.image.decorate.picture(width: 70, height: 70, type: :thumb) %>
	    <% end %>
	  <% end %>
	<% end %>
        </td>
        <td>
          <%= link_to move_to_top_surface_layer_path(@surface, surface_layer) + tab_param(__FILE__), method: :move_to_top ,title: "move to bottom" do %>
            <span class="glyphicon glyphicon-arrow-down"></span>
          <% end %>
          <%= link_to surface_layer_path(@surface, surface_layer) + tab_param(__FILE__), method: :delete, title: "delete layer #{list_title(surface_layer)}", data: {confirm: "Are you sure you want to delete layer #{list_title(surface_layer)}?"} do %>
            <span class="glyphicon glyphicon-remove"></span>
          <% end %>
        </td>
      </tr>
    <% end %>
    <tr>
    <td></td>
    <td>base</td>
    <td>100</td>
    <td>
      <ul>
      <span>
      <%= @surface.first_image.decorate.picture(width: 70, height: 70, type: :thumb) %>
      </span>
      </ul>
    </td>
    <td></td>
    </tr>
  </tbody>
  <tfoot>
  </tfoot>
</table>

<%= javascript_tag do %>
  (function($) {
    $("ul.surface-layer").sortable({
      connectWith: ".surface-layer",
      receive: function(event, ui) {
        ui.item.find("input.layer-id").val($(event.target).data("id"));
        layer_id = $(event.target).data("id");
        console.log(ui.item.attr('data-surface-id'));
        console.log(ui.item.attr('data-surface-image-id'));

        surface_id = $(ui.item).attr('data-surface-id');
        surface_image_id = $(ui.item).attr('data-surface-image-id');
        image_id = $(ui.item).attr('data-image-id');
        $.ajax({
          url: surface_id + '/images/' + image_id + '/layer.json',
          type: 'POST',
          dataType: 'text',
          data: { "layer_id": $(event.target).data("id") },
          success: function(){}
        });
      }
    }).disableSelection();
  })(jQuery);
<% end %>
To upload and link a layer to surface, use interface at the bottom. 
